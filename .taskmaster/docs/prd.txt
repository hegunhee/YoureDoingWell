프로젝트 개요
- 각 feature 모듈별로 존재하는 XXXScreen 화면에 대해, 의도가 분명하고 유의미한 UI 테스트를 작성한다.
- 각 테스트는 해당 Screen의 주요 시나리오를 검증하며, 테스트 함수명과 설명만으로 목적이 명확히 드러나야 한다.

요구사항
1. 모듈 구조
    - 프로젝트는 여러 feature 모듈로 구성되어 있다. (예: Auth, Home, Profile 등)
    - 각 모듈에는 하나 이상의 Screen이 존재한다. (예: LoginScreen, HomeScreen 등)

2. UI 테스트 작성
    - 각 Screen마다 최소 2개 이상의 주요 시나리오에 대한 UI 테스트를 작성한다.
    - 테스트 함수명은 테스트 목적이 명확하게 드러나도록 작성한다.
    - 각 테스트는 독립적으로 실행 가능해야 하며, 의존성이 없어야 한다.
    - 테스트는 실제 사용자 행동(입력, 버튼 클릭, 화면 전환 등)을 시뮬레이션한다.

3. 테스트 예시
    - 예시:
      - testLoginSuccess_navigatesToHomeScreen(): 정상 로그인 시 홈 화면으로 이동하는지 검증
      - testLoginFail_showsErrorMessage(): 잘못된 비밀번호 입력 시 에러 메시지 노출 검증
      - testProfileEdit_savesChanges(): 프로필 수정 후 변경사항이 저장되는지 검증

4. 테스트 코드 위치
    - 각 feature 모듈의 __tests__ 또는 test 디렉토리에 작성한다.
    - 파일명은 XXXScreen.test.js 또는 XXXScreenTest.kt 등 일관성 있게 작성한다.

5. 테스트 기준
    - 테스트는 실제 사용자 플로우를 최대한 반영한다.
    - 각 테스트는 성공/실패 기준이 명확해야 한다.
    - 테스트 커버리지를 높이기 위해, 엣지 케이스(예: 입력값 누락, 네트워크 오류 등)도 포함한다.

비고
- 테스트 프레임워크는 프로젝트 표준(Jest, Espresso 등)을 따른다.
- 필요시 Mock, Stub 등을 활용해 외부 의존성을 최소화한다.
- 테스트 작성 시, 코드 리뷰를 통해 일관성과 품질을 유지한다. 